function d_score = db_calfeatscore(st_dwtfeat,st_featset)
%----pengfei annotation----
%输入两个鞋印事先提取好的特征, 计算两个鞋印的相似度

v_score = zeros(4,1);

%输入两个鞋印各自的:
%1 top-region feature, 2 bottom-region feature,
%3 top-region 占空比, 4 bottom-region 占空比 
%再计算二者相似度
v_score(1) = db_calpurescore(st_dwtfeat.t_feat,...
    st_dwtfeat.b_feat,...
    st_dwtfeat.t_rate,...
    st_dwtfeat.b_rate,...
    st_featset.t_feat,...
    st_featset.b_feat,...
    st_featset.t_rate,...
    st_featset.b_rate);

%输入第一个鞋印的:
%1 mirror top-region feature, 2 mirror bottom-region feature,
%3 top-region 占空比, 4 bottom-region 占空比 
%输入第二个鞋印的:
%1 top-region feature, 2 bottom-region feature,
%3 top-region 占空比, 4 bottom-region 占空比 
%再计算二者相似度
v_score(2) = db_calpurescore(st_dwtfeat.t_mfeat,...
    st_dwtfeat.b_mfeat,...
    st_dwtfeat.t_rate,...
    st_dwtfeat.b_rate,...
    st_featset.t_feat,...
    st_featset.b_feat,...
    st_featset.t_rate,...
    st_featset.b_rate);

%输入两个鞋印的:
%1 mirror top-region feature, 2 mirror bottom-region feature,
%3 top-region 占空比, 4 bottom-region 占空比 
%再计算二者相似度
v_score(3) = db_calpurescore(st_dwtfeat.t_mfeat,...
    st_dwtfeat.b_mfeat,...
    st_dwtfeat.t_rate,...
    st_dwtfeat.b_rate,...
    st_featset.t_mfeat,...
    st_featset.b_mfeat,...
    st_featset.t_rate,...
    st_featset.b_rate);


%输入第一个鞋印的:
%1 top-region feature, 2 bottom-region feature,
%3 top-region 占空比, 4 bottom-region 占空比 
%输入第二个鞋印的:
%1 mirror top-region feature, 2 mirror bottom-region feature,
%3 top-region 占空比, 4 bottom-region 占空比 
%再计算二者相似度
v_score(4) = db_calpurescore(st_dwtfeat.t_feat,...
    st_dwtfeat.b_feat,...
    st_dwtfeat.t_rate,...
    st_dwtfeat.b_rate,...
    st_featset.t_mfeat,...
    st_featset.b_mfeat,...
    st_featset.t_rate,...
    st_featset.b_rate);

%取以上相似度的最大值
d_score = max(abs(v_score));